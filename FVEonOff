#!/bin/bash

source ~/.FVErc
source "$FVEBINDIR"/FVEcomFncs


function getDeviceNumber() {
	#usage: getDeviceNumber $COMPONENT
	local COMPONENT=$1
	debugPrint "Getting device number for: $COMPONENT"
	DEVICENUM=$( grep -B1 $COMPONENT /etc/tellstick.conf | head -1 | awk '{print $NF}')
}

function checkTDstatus() {
	local TDSTATUS=`sudo service telldusd status | tr -d '!' `
	if [  "$TDSTATUS" = "telldusd is not running ... failed" ]; then
		echo "`date +%Y/%M/%d-%H:%M:%S` - Seems telldusd is down? Restarting"
		sudo service telldusd start 
		sudo service telldusd status
		echo ====
	fi
}

function getTDstatuses() {
	> "$TMPDIR"/FVE.statuses
	tdtool -l > "$TMPDIR"/FVE.statuses
}

function getStatuses() {
	checkTDstatus
	getTDstatuses
}



function uninitStatuses() {
	rm -f "$TMPDIR"/FVE.statuses
	return $?
}

function getDeviceStatus() {
	return 0
}

function mainSetLoop() {
	for i in `seq 0 $DEVICESTOTALNUM`; do
		echo ${DEVICENAME[$i]}: ${DEVICESTATUS[$i]}
	done
	return 0
}

function mainGetLoop() {
	return 0
}

DEVICESTOTALNUM=-1
while [ $# -gt 0 ]; do
	case $1 in
		-h|--help) printHelp; shift;;
		-v|--verbose) VERB=Y; VERBOUT='' ; shift;;
		-d|--debug) VERB=Y; VERBOUT=''; DEBUG=Y ; shift;;
		-f|--force) FORCE='Y'; shift;;
		--raw) RAW='Y'; shift;;
		--setstatus) 
			if [ $# -lt 3 ]; then 
				echo "Not enough params passed for --device $2"
				exit 2
			fi
			if [ "$3" != 'on' -a "$3" != 'off' ] && [ "$3" != 'ON' -a "$3" != 'OFF' ] ; then
				echo "3rd parametr may be only 'on/ON' or 'off/OFF'. Passed '$3' for device $2"
				exit 3
			fi
			((++DEVICESTOTALNUM)) 
			DEVICENAME[$DEVICESTOTALNUM]="$2"
			DEVICESTATUS[$DEVICESTOTALNUM]=${3,,}
			TYPE="SET"
			shift 3
			;;
		--getstatus)
			if [ $# -lt 2 ]; then 
				echo "Not passed device parametr --getstatus"
				exit 2
			fi
			DEVICENAME="$2"
			TYPE="GET"
			shift 2
			;;
		*)  echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
		--init) getStatusses; exit 0;;
		--destroy) uninitStatuses ;exit 0;;
	esac
done

if [ "$TYPE" = "SET" ]; then
	mainSetLoop
elif [ "$TYPE" = "GET" ]; then
	mainGetLoop
else
	verbPrint "No TYPE recognized"
	exit 0
fi


