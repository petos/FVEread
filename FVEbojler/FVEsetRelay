#!/bin/bash
function debugPrint() {
	if [ $DEBUG ]; then
		echo "$1"
	fi
}

function verbPrint() {
	if [ $VERB ]; then
		echo "$1"
	fi
}

function errorPrint() {
		echo "`date +%Y.%m.%d/%H:%M`: $1"
}

function getOpts() {
if [ -e ~/config/FVERelays ]; then
    CONFIGFILE=/home/fve/config/FVERelays
elif [ -e ./FVERelays ]; then
    CONFIGFILE=./FVERelays
else
    errorPrint "No FVERelays config file was found!"
    exit 4
fi

if [ -e ~/config/FVEPinPortMap ]; then
    source ~/config/FVEPinPortMap
elif [ -e ./FVEPinPortMap ]; then
    source ./FVEPinPortMap
else
    errorPrint "No FVEPinPortMap config file was found!"
    exit 4
fi
}

function printHelp() {
	echo -e "\nusage: FVEsetRelay {RELAY STATUS}
	-h|--help  prints this help

	-v         talky output
    --debug    tells everything it knows

    -l|--list     list all configured devices

    RELAY must be one of configured   
	STATUS must be 'on' or 'off'
"
exit 0
}

function retreivePINS() {
    echo $(grep -w $DEVICENAME $CONFIGFILE | awk '{print $2}' | tr ',' ' ')
}

function setupPorts() {
    for PORT in $(retreivePINS $DEVICENAME); do
        debugPrint "Seting pin ${PORTPINMAP[$PORT - 1 ]} for port $PORT to OUT"
        gpio -1 mode ${PORTPINMAP[$PORT - 1 ]} OUT
        if [ $? = 0 ]; then
            debugPrint "OK, port is set to output"
        else
            errorPrint "Something went wrong in initializing of pin ${PORTPINMAP[$PORT - 1 ]}!"
            exit 1
        fi
        debugPrint "Seting pin ${PORTPINMAP[$PORT - 1 ]} for port $PORT to $DEVICESTATUS"
        gpio -1 write ${PORTPINMAP[$PORT - 1 ]} $DEVICESTATUS
        if [ $? = 0 ]; then
            verbPrint "OK, port $PORT (PIN ${PORTPINMAP[$PORT - 1 ]}) is configured to value $DEVICESTATUS"
        else
            errorPrint "Something went wrong when tried to setup pin ${PORTPINMAP[$PORT - 1 ]} to $DEVICESTATUS!"            
        fi
    done
}

function mainLoop() {
    verbPrint "Setting device $DEVICENAME to $DEVICESTATUS"
    setupPorts
}

function listAll() {
    verbPrint "Configured devices:"
    grep -v \^# $CONFIGFILE | awk '{print $1}'
}

getOpts

while [ $# -gt 0 ]; do
	case $1 in
		-h|--help) printHelp; shift;;
		-v|--verbose) VERB=Y; VERBOUT='' ; shift;;
		-d|--debug) VERB=Y; VERBOUT=''; DEBUG=Y ; shift;;
		-l|--list) LISTALL=Y; shift;;
        --device)
            if [ $# -lt 3 ]; then 
				errorPrint "Not passed devices status"
				exit 2
            fi
            if [ "${3,,}" != 'on' -a "${3,,}" != 'off' -a "${3,,}" != 'notd' ] ; then
				errorPrint "3rd parametr may be only 'on/ON' or 'off/OFF'. Passed '$3' for device $2"
				exit 3
			fi
            DEVICENAME="$2"
            DEVICESTATUS=$(echo "${3,,}" | sed s/on/0/g | sed s/off/1/g)
            shift 3;;
        *)  echo "$0: error - unrecognized option $1"; exit 1;;
	esac
done

if [ $LISTALL ]; then
    listAll 
    exit 0
fi

if [ -z "$DEVICENAME" ]; then
    errorPrint "DEVICE must be passed"
    exit 3
fi
if ( ! grep -w $DEVICENAME $CONFIGFILE > /dev/null ); then
    errorPrint "Device does not exists in config"
    exit 1
fi
mainLoop
