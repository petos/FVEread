#!/bin/bash

source ~/.FVErc
source "$FVEBINDIR"/FVEcomFncs

function printHelp() {
	echo -e "usage: `basename $0` [OPTIONS]
 Opts:
  --help|-h   Print this help message
  -v          Talky version
  --stdout    Will not update webpage, but print just output to stdout
  
  CAUTION: this are permanent changes and must be reverted via the oposite
           command!!!
  --disable   Kick off the script out of the crontab and stop all devices in cron
  --enable    Enable the script in cron
  --off       Turn off all devices and will disable power optimalization
  --on        Will enable power optimalization
  --reconfig  Reload all config files
"
exit 0
}

function getAvrg() {
	debugPrint "FNC: getAvrg"
	#Will make average production in last 10 minutes (last 10 lines)
	AVRG=$(expr $(expr $(tail -10 $HISTORYFILE | awk '{print $2}' | sed '/^$/d' | sed ':a;N;$!ba;s/\n/ + /g')) / $(tail -10 $HISTORYFILE | awk '{print $2}' | sed '/^$/d' | wc -l) )	
	verbPrint "Avrg is: $AVRG"
}

function getFileFromFVE() {
	debugPrint "FNC: getFileFromFVE"
	curl -u $FVEUSERNAME:$FVEPWD http://stridac > "$TMPDIR"/FVE.$$.html 2>/dev/null 
	if [ $? != 0 ]; then
		echo "Stridac neni dostupny"
		return 1
	else
		return 0
	fi
}

function cleanLine() {
	local LINE=$1
	echo $LINE | sed 's/<\/td>//g' | sed 's/&nbsp//g' | tr -d ' ' | \
	sed 's/xxx/0/g' | tr -dc '[:print:]'
}

function getCurrent() {
	local iCURRENT=`cat "$TMPDIR"/FVE.$$.html | grep -A2 'aktu[.]*'|grep ln -A2 | tail -1 `
	echo `cleanLine "$iCURRENT"`
}

function getCurrentLs() {
	local iCURRENT=`cat "$TMPDIR"/FVE.$$.html | grep -B1 '<td width="30">&nbsp W</td>' | grep -v '<td width="30">&nbsp W</td>' | grep -v '-' | tail -"$1" | head -1`
	echo `cleanLine "$iCURRENT"`
}

function getToday() {
	local iTODAY=`cat "$TMPDIR"/FVE.$$.html | grep -A2 'denn[.]*'|grep energie -A2 | tail -1`
	echo `cleanLine "$iTODAY"`
}

function cleanFile() {
	debugPrint "FNC: cleanFile"
	rm -f "$TMPDIR"/FVE.$$.html
	#rm -f "$TMPDIR"/FVE.gn
	rm -f "$TMPDIR"/fved.png
	rm -f "$TMPDIR"/fvem.png
	rm -f "$TMPDIR"/fvep.png
	rm -f "$TMPDIR"/fved"$TIMEDATE_YYYYMMDD".png
	rm -f "$TMPDIR"/fvem"$TIMEDATE_YYYYMM".png
	rm -f "$TMPDIR"/fvep"$TIMEDATE_YYYYMM".png
	rm -f "$TMPDIR"/fvel"$TIMEDATE_YYYYMM".png
	rm -f "$TMPDIR"/fve.device.*.png
	rm -f "$TMPDIR"/.fveread.lock
}

function checkRunningStatus() {
	debugPrint "FNC: checkRunningStatus"
	if [ -e "$TMPDIR"/.fveread.lock ]; then
		echo "Already running, quiting."
		exit 0
	fi
	echo $$ > "$TMPDIR"/.fveread.lock
}


function updateProductionFile() {
	#usage: genProductionFiles 
	debugPrint "FNC: updateProductionFile"
	
	#DATE="$TIMEDATE_YYYYMMDD"

	sed -i /"$TIMEDATE_YYYYMMDD"/d $PRODUCTIONFILE
	echo "$TIMEDATE_YYYYMMDD $TODAY" >> $PRODUCTIONFILE
	
	return 0
}
 
function checkFileExist() {
	debugPrint "FNC: checkFileExist"
	if [ ! -e $HTMLFILE ]; then
		FVEgenPage --defpage
	fi
	if [ ! -e "$HTMLOPTFILE" ]; then
		FVEgenPage --optpage
	fi
	if [ `cat $HTMLOPTFILE | wc -l` -le 1 ]; then
		FVEgenPage --optpage
	fi
}

function uploadDataFTP() {
	debugPrint "FNC: uploadDataFTP"
	#usage: uploadDataFTP
	
	lftp -u "$FTPUSERNAME",$FTPPASSWD -e "mput -O "$HTMLDESTDIR" $TMPDIR/fvem.png $TMPDIR/fvel.png $TMPDIR/fve.device.*.png $TMPDIR/fved.png $TMPDIR/fvep.png $HTMLPOWERFILE $HTMLOPTFILE $HTMLFILE && bye" $HTMLSERVER >> /dev/null

	mv "$TMPDIR"/fved.png "$TMPDIR"/fved"$TIMEDATE_YYYYMMDD".png
	mv "$TMPDIR"/fvel.png "$TMPDIR"/fvel"$TIMEDATE_YYYYMMDD".png
	mv "$TMPDIR"/fvem.png "$TMPDIR"/fvem"$TIMEDATE_YYYYMM".png
	mv "$TMPDIR"/fvep.png "$TMPDIR"/fvep"$TIMEDATE_YYYYMM".png
	for FILE in "$TMPDIR"/fve.device.*.png; do 
		TRIMMED=${FILE%.png}
		mv $TRIMMED{.png,."$TIMEDATE_YYYYMMDD".png} 
	done
	
	lftp -u "$FTPUSERNAME",$FTPPASSWD -e "mput -O "$HTMLDESTDIR"/fve.hist/ $TMPDIR/fvem*.png $TMPDIR/fvel*.png $TMPDIR/fve.device.*.png $TMPDIR/fvep*.png $TMPDIR/fved"$TIMEDATE_YYYYMMDD".png && bye" $HTMLSERVER >> /dev/null 
	
	return 0
}

function printDataStdout() {
	debugPrint "FNC: printDataStdout"
	#usage: #printDataStdout 

	echo "My FV: `date`:"
	echo "Current production [kW]  = $CURRENT  (L1: $L1, L2: $L2, L3: $L3)"
	#echo "Current production [kW]  = $CURRENT"
	echo "Avarage production [kW]  = $AVRG "
	echo "Today was produced [kWh] = $TODAY"
	return 0
}


function getData() {
	debugPrint "FNC: getData"
	getFileFromFVE 
	if [ $? = 1 ]; then
		CURRENT="-0"
		TODAY="-0"
		FVESTATUS="Down/stopped"
	else
		CURRENT="`getCurrent`"
		L1="`getCurrentLs 1`"
		L2="`getCurrentLs 2`"
		L3="`getCurrentLs 3`"
		TODAY="`getToday`"
		FVESTATUS="Running"
	fi
	getAvrg
}

function genFiles() {
	debugPrint "FNC: genFiles"
	#usage: genFiles
		echo $TIMEDATE_YYYYMMDDHHmm $CURRENT $TODAY $AVRG $L1 $L2 $L3 >> "$HISTORYFILE"

		FVEgenPage  --powerpage --current $CURRENT --L1 $L1 --L2 $L2 --L3 $L3 --today $TODAY --fvestatus $FVESTATUS --avrg $AVRG 
		#FVEgenPage  --powerpage --current $CURRENT --today $TODAY --fvestatus $FVESTATUS --avrg $AVRG
		
		updateProductionFile
		
		FVEgenGraphs --all
}

function disableMe() {
	crontab -l | sed  -e'/FVEread/s/^/#/g' | crontab	
}

function enableMe() {
	crontab -l | sed  -e'/FVEread/s/^#//g' | crontab
}

function onMe() {
        sed -i -e'/FVEOPTONOFF/s/"OFF"/"ON"/g' ~/.FVErc
}

function offMe() {
        sed -i -e'/FVEOPTONOFF/s/"ON"/"OFF"/g' ~/.FVErc
}

function mainLoop() {
	debugPrint "FNC: mainLoop"
	getData
	
	if [ "$STDOUT" ]; then
		printDataStdout 
	else
		genFiles
		checkFileExist
		FVEoptRunV2 $VERBPARM
		checkRunningStatus
		uploadDataFTP
	fi
	cleanFile
}

VERBPARM=''
VERB=''

while [ $# -gt 0 ]; do
	case $1 in
		-h|--help) printHelp; exit; shift;;
		--stdout) STDOUT="YES" ; shift;;
		-v|--verbose) VERB=Y; VERBPARM="-v" ; shift;;
		-d|--debug) VERB=Y; DEBUG=Y; VERBPARM="-d" ; shift;;
		--disable) 
			disableMe 2>/dev/null
			FVEoptRunV2 --off
			shift
			exit 0
			;;
		--enable)
			enableMe 2>/dev/null
			shift
			;;
		--off)
			offMe
			shift
			;;
		--on)
			onMe
			shift
			;;
		--reconfig)
			rm -f "$TMPDIR"/fve*
			cleanFile
			echo "Done. Please re-run the FVEread."
			exit 0
			;;
		*)  echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
	esac
done
debugPrint "SCRIPT: FVEread"
mainLoop
