#!/bin/env python3
import RPi.GPIO as GPIO
import argparse
GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)

def parseArgs():
    parser = argparse.ArgumentParser(prog='pyGPIO', description='Set/unset GPIO pins on server.')
    parser.add_argument('--pin', nargs=1, required=True, action='store', 
                        help='PIN to work with')
    parser.add_argument('--value', nargs=1, required=False, action='store', 
                        help='on/off')
    parser.add_argument('--mode', nargs=1, required=True, action='store', 
                        help='get/set, if get, then return value ')
    parser.add_argument('--debug', required=False, action='store_true', default=['False'], help='Run in debug mode')
    return parser.parse_args()

def setMode(VALUE,PIN):
    GPIO.setup(PIN, GPIO.OUT)
    if VALUE == "on":
        output_value = GPIO.LOW
    if VALUE == "off":
        output_value = GPIO.HIGH
    GPIO.output(int(PIN), output_value)

def getMode(PIN):
    GPIO.setup(PIN, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
    if GPIO.input(PIN) == GPIO.HIGH:
        print("off")
    else:
        print("on")


def main():
    args = parseArgs()
    PIN=int(args.pin[0])
    MODE=args.mode[0]

    if ( MODE == "set" ):
        VALUE=args.value[0]
        setMode(VALUE,PIN)
    elif ( MODE == "get" ):
        getMode(PIN)
    else:
        print("ERROR in --mode set")
        exit(1)

main()
