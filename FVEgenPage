#!/bin/bash

source ~/.FVErc

function printHelp() {
	echo "
		-v|--verbose
	
	--defpage

	--powerpage 
	
		--current CURRENT
		--today TODAY
		--avrg AVERAGE
		--fvestatus FVESTATUS

	--optpage
        --off -- set OFF for all devices
		
		currently supported devices:
		--lacerta [on|off]
		--boiler1 [on|off]
		--fukar1 [on|off]
	
	--update
		updates only row with device. Not going to re-generate 
		the whole page.
	"
	
}

function printLoadedParams() {
	echo "
	FVESTATUS=$FVESTATUS
	FVECURRENT=$FVECURRENT
	FVETODAY=$FVETODAY
	FVEAVRG=$FVEAVRG
	LACERTA=$LACERTA
	BOILER1=$BOILER1
	FUKAR1=$FUKAR1
	KLIMA1=$KLIMA1
	"
}

function genDefPage() {
	
cat > "$HTMLFILE" << EOF
<!DOCTYPE html>
<html>
<head>
<title>FVE overview</title>
<meta http-equiv="refresh" content="60">
</head>

<body>

<iframe src="$FVEHTMLPOWERNAME" width="640" height="230"></iframe>


<h3>Graphs:</h3>
<h4>Today power report:</h4>
<img src="fved.png" alt="Power today">
<h4>This month power overview:</h4>
<img src="fvem.png" alt="Power overview this month">
<h4>Produced of this month:</h4>
<img src="fvep.png" alt="Produced this month">

<h3>Optimalization of consumption</h3>

<iframe src="$FVEHTMLOPTNAME" width="640" height="170"></iframe>

</table>
</body>
</html>
EOF
}

function genPowerPage() {
cat > "$HTMLPOWERFILE" << EOF
<p>Generated on `date +%d/%m/%Y,%H:%M`</p>
<h3>Current status/health: $FVESTATUS</h3>
<h3>Power now: $FVECURRENT [W]</h3>
<h3>Average (10m): $FVEAVRG [W]</h3>
<h3>Production today: $FVETODAY [kWh]</h3>
EOF
}

function genOptsPage() {
	
cat > "$HTMLOPTFILE" << EOF
<table border="0" cellpadding="6" cellspacing="0">
  <tr valign="middle" align="center">
    <th>Endpoint:</th>
    <th>Lacerta</th>
    <th>Boiler 1</th>
    <th>Fukar 1</th>
  </tr>
  <tr valign="middle" align="center">
    <td>Designed status:</td>
    <td><img src=lacerta-$LACERTA.png></td>
    <td><img src=boiler1-$BOILER1.png></td>
    <td><img src=fukar1-$FUKAR1.png></td>
  </tr>
</table>
EOF
}

function updateLacertaStatus() {
	ping -q -c 1 -w 1 lacerta >> /dev/null
	if [ $? = 0 ]; then
		sed -i s/lacerta-stat-off/lacerta-stat-on/g $HTMLOPTFILE 
		LSTATUS=on
		#echo "Lacerta is ON" 
	else
		sed -i s/lacerta-stat-on/lacerta-stat-off/g $HTMLOPTFILE
		LSTATUS=off
		#echo "Lacerta is OFF"
	fi
}

function updateTimeStamp() {
	sed '/<\/table>$/,$d' file
	echo "<\/table>" >> $HTMLOPTFILE 
	echo `date +%Y/%m/%d,%H:%M:%S` >> $HTMLOPTFILE 
}


function checkStatus() {
	#usage: checkStatus COMPONENT $STATUS
	#only on|off statusses are allowed
	COMPONENT=$1
	STATUS=$2
	
	if [ $STATUS != on -a $STATUS != off ]; then
		echo "Wrong status!"
		echo "Received:   $STATUS"
		echo "Component: $COMPONENT"
		exit 1
	fi
}

function updateOptFile() {
	for NUM in $(seq 0 $(expr $DEVICENUM - 1 )); do
	checkStatus ${DEVICENAME[$NUM]} ${DEVICESTATUS[$NUM]}
		if [ ${DEVICESTATUS[$NUM]} = on ]; then
			sed -i s/${DEVICENAME[$NUM]}-off/${DEVICENAME[$NUM]}-on/g $HTMLOPTFILE 
		elif [ ${DEVICESTATUS[$NUM]} = off ]; then
			sed -i s/${DEVICENAME[$NUM]}-on/${DEVICENAME[$NUM]}-off/g $HTMLOPTFILE 
		fi
	done
}

DEVICENUM=0
while [ $# -gt 0 ]; do
	case $1 in
		-v|--verbose) VEBROSE="Y"; shift;;
		--defpage) GENDEFPAGE=Y; shift;;
		--off) LACERTA=off ; BOILER1=off;FUKAR1=off; shift;;
		--optpage) GENOPTPAGE=Y; shift;;
		--powerpage) GENPOWERPAGE=Y; shift;;
		--fvestatus) FVESTATUS="$2"; shift 2;;
		--current) FVECURRENT="$2"; shift 2;;
		--today) FVETODAY="$2"; shift 2;;
		--avrg)	FVEAVRG="$2"; shift 2;;
		--lacerta) LACERTA="$2"; shift 2;;
		--boiler1) BOILER1="$2"; shift 2;;
		--fukar1) FUKAR1="$2"; shift 2;;
		--device) 
			if [ $# -lt 3 ]; then 
				echo "Not enough params passed for --device"
				exit 2
			fi
			DEVICENAME[$DEVICENUM]="$2"
			DEVICESTATUS[$DEVICENUM]="$3"
			((++DEVICENUM)) 
			shift 3;;
		--update) UPDATE=Y; shift;;
		*)  echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
	esac
done

if [ $# -gt 0 ]; then
	echo "Unrecognized parametr(s): \"$@\""
fi

if [ $VEBROSE ]; then
	printLoadedParams
fi

if [ -z $GENDEFPAGE ] && [ -z $GENOPTPAGE ] && [ -z $GENPOWERPAGE ] && [ -z $UPDATE ]; then
	echo "one of commands must be used:
	defpage,optpage,powerpage,update
	GENDEFPAGE: $GENDEFPAGE
	GENOPTPAGE: $GENOPTPAGE
	GENPOWERPAGE: $GENPOWERPAGE
	"
	exit 1
fi

if [ $GENDEFPAGE ]; then
	genDefPage
fi

if [ $GENOPTPAGE ]; then 
	if [ -z $LACERTA ] || [ -z $BOILER1 ] || [ -z $FUKAR1 ] || [ -z $KLIMA1 ]; then
	#	echo "--lacerta and --boiler1 and --fukar1 and --klima1 are mandatorry for --optpage parameter"
		printLoadedParams
		LACERTA=off
		BOILER1=off
		FUKAR1=off
	fi
		#checkStatus 
		#updateLacertaStatus
		genOptsPage
	#fi
fi
if [ $GENPOWERPAGE ]; then
	if [ -z $FVECURRENT ] || [ -z $FVETODAY ] || [ -z $FVESTATUS ] || [ -z $FVEAVRG ] ; then
		echo "--current, --today, --avrg and --fvestatus are mandatorry for --powerpage parameter"
		printLoadedParams
	else
		genPowerPage
	fi
fi
if [ $UPDATE ]; then
	updateOptFile
fi

updateTimeStamp

