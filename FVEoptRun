#!/bin/bash

source ~/.FVErc

function verbPrint() {
	if [ $VERB ]; then
		echo "$1"
	fi
}

function opt() {
	local COMPONENT=$1
	local STATUS=${2,,}
	
	verbPrint "COMPONENT: STATUS"
	verbPrint "$COMPONENT: $STATUS"
	
	if [ "$STATUS" = "on" ]; then
		verbPrint "Turning ON"
		FVEgenPage --update --$COMPONENT $STATUS
		realStatus $COMPONENT $STATUS
	elif [ "$STATUS" = "off" ]; then
		verbPrint "Turning off"
		FVEgenPage --update --$COMPONENT $STATUS
		realStatus $COMPONENT $STATUS
	else
		echo "Unknown parametr for $0"
	fi
}

function realStatus(){
	#usage: getStatus $COMPONENT $STATUS
	local COMPONENT=$1
	local EXPECTEDSTATUS=$2
	local STATUS=$(tdtool -l | awk /$COMPONENT/'{print $NF}' | tr '[:upper:]' '[:lower:]' )
	local DEVICENUM=$(tdtool -l | awk /$COMPONENT/'{print $1}' )
		verbPrint "COMPONENT: DEVICENUM = EXPECTEDSTATUS:STATUS"
		verbPrint "$COMPONENT: $DEVICENUM = $EXPECTEDSTATUS:$STATUS"
	if [ -z $DEVICENUM ]; then
		echo "Device not recognized, skipping"
		return 1
	fi
	if [ "$STATUS" = "$EXPECTEDSTATUS" ]; then
		verbPrint "OK, nothing to change"
		return 0
	else
			verbPrint "changing status of device #$DEVICENUM from $STATUS to $EXPECTEDSTATUS"
		tdtool --${EXPECTEDSTATUS,,} $DEVICENUM $VERBOUT
	fi
}

function printHelp() {
	echo -e "\nusage: `basename $0` POWER OLDPOWER(s)
 Opts:
  * POWER -- Current power production. Script then will issue requested steps
  * OLDPOWER(s) -- Previous power production - up to 5
"
exit 0
}


VERBOUT="2>/dev/null"

if [ "$1" = '-h' -o "$1" = "--help" -o "$#" = "0" ]; then
	printHelp
	exit
elif [ "$1" = "-v" ]; then
	VERB=Y
	VERBOUT=''
	shift
fi

CURRENT="$1"



if [ $CURRENT -lt 100 ]; then
	opt lacerta OFF
fi

if [ $CURRENT -gt 400 ]; then
	opt lacerta ON
fi

if [ $CURRENT -gt 900 ]; then
    opt boiler1 ON
else
    opt boiler1 OFF
fi

if [ $CURRENT -gt 1500 ] ; then
    opt boiler2 ON
else
    opt boiler2 OFF
fi

exit 0
