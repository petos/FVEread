#!/bin/bash

source ~/.FVErc

function verbPrint() {
	if [ $VERB ]; then
		echo "$1"
	fi
}

function opt() {
	#usage opt $COMPONENT $EXPECTEDSTATUS
	local COMPONENT=$1
	local EXPECTEDSTATUS=${2,,}
	
	verbPrint "COMPONENT: EXPECTEDSTATUS"
	verbPrint "$COMPONENT: $EXPECTEDSTATUS"
	
	if [ "$EXPECTEDSTATUS" = "on" ]; then
		verbPrint "Turning ON"
		realStatus $COMPONENT $EXPECTEDSTATUS
		FVEgenPage --update --$COMPONENT $EXPECTEDSTATUS
	elif [ "$EXPECTEDSTATUS" = "off" ]; then
		verbPrint "Turning off"
		realStatus $COMPONENT $EXPECTEDSTATUS
		FVEgenPage --update --$COMPONENT $EXPECTEDSTATUS
	else
		echo "Unknown parametr for function opt(): $@"
	fi
}

function getDeviceNumber() {
	#usage: getDeviceNumber $COMPONENT
	local COMPONENT=$1
	verbPrint "Getting device number for: $COMPONENT"
	DEVICENUM=$( grep -B1 $COMPONENT /etc/tellstick.conf | head -1 | awk '{print $NF}')
}

function realStatus(){
	#usage: getStatus $COMPONENT $STATUS
	local COMPONENT=$1
	local EXPECTEDSTATUS=$2
	local DEVICENUM=''
	getDeviceNumber $COMPONENT
	verbPrint "$COMPONENT has been detected with device number $DEVICENUM"
	if [ -z $DEVICENUM ]; then
		verbPrint "Device not recognized, skipping"
		return 1
	fi
	local STATUS=$(tdtool -l | awk /$COMPONENT/'{print $NF}' | tr '[:upper:]' '[:lower:]' )
		verbPrint "COMPONENT: DEVICENUM = EXPECTEDSTATUS:STATUS"
		verbPrint "$COMPONENT: $DEVICENUM = $EXPECTEDSTATUS:$STATUS"
	if [ "$STATUS" = "$EXPECTEDSTATUS" ]; then
		verbPrint "OK, nothing to change"
		return 0
	else
		verbPrint "changing status of device #$DEVICENUM from $STATUS to $EXPECTEDSTATUS"
		ERRMSG=$(tdtool --${EXPECTEDSTATUS,,} $DEVICENUM $VERBOUT )
		if [ "$?" != "0" ]; then
			echo "Problem with tdtool. Failed with message:"
			echo "\"$ERRMSG\""
		fi
	fi
}

function printHelp() {
	echo -e "\nusage: `basename $0` POWER OLDPOWER(s)
 Opts:
    POWER -- Current power production. Script then will issue requested steps
    OLDPOWER(s) -- Previous power production - up to 5
"
exit 0
}


VERBOUT="2>/dev/null"

if [ "$1" = '-h' -o "$1" = "--help" -o "$#" = "0" ]; then
	printHelp
	exit
elif [ "$1" = "-v" ]; then
	VERB=Y
	VERBOUT=''
	shift
fi

CURRENT="$1"

if [ $CURRENT -gt 1000 ]; then
	opt boiler1 ON
else
	opt boiler1 OFF
fi

exit 0
